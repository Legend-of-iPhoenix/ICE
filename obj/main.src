; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT BSS
_ice:
	DS	20
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	#include <math.h>
;    6	#include <stdio.h>
;    7	#include <stdlib.h>
;    8	#include <string.h>
;    9	
;   10	#include <fileioc.h>
;   11	
;   12	#include "parse.h"
;   13	#include "main.h"
;   14	#include "errors.h"
;   15	
;   16	ice_t ice;
	SEGMENT CODE
;   17	
;   18	void main() {
_main:
	LD	HL,-4
	CALL	__frameset
;   19	    uint8_t a = 0;
	LD	(IX+-1),0
;   20	    unsigned int token;
;   21	
;   22	    strcpy(ice.inName, "ABC");
	LD	BC,L__0
	PUSH	BC
	LD	BC,_ice+9
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;   23	
;   24	    ti_CloseAll();
	CALL	_ti_CloseAll
;   25	    ice.inPrgm = ti_OpenVar(ice.inName, "r", ti_Program);
	LD	BC,5
	PUSH	BC
	LD	BC,L__1
	PUSH	BC
	LD	BC,_ice+9
	PUSH	BC
	CALL	_ti_OpenVar
	POP	BC
	POP	BC
	POP	BC
	LD	(_ice+18),A
;   26	    if (!ice.inPrgm)                                      goto err;
	OR	A,A
	JR	Z,L_0
;   27	    
;   28	    // Check if it's an ICE program
;   29	    if (ti_GetC(ice.inPrgm) != tii)                       goto err;
	LD	A,(_ice+18)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	BC,44
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_0
	JR	L_7
;   30	    
;   31	    // Get the output 
;   32	    while ((token = ti_GetC(ice.inPrgm) != EOF) && token != tEnter && a < 8) {
L_8:
;   33	        ice.outName[a++] = (uint8_t)token;
	LD	B,(IX+-4)
	LD	A,(IX+-1)
	UEXT	HL
	LD	L,A
	LD	DE,_ice
	ADD	HL,DE
	LD	(HL),B
	INC	(IX+-1)
;   34	    }
L_7:
	LD	A,(_ice+18)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_ti_GetC
	POP	BC
	LD	BC,16777215
	OR	A,A
	SBC	HL,BC
	JR	Z,L__5
	LD	B,1
	JR	L__6
L__5:
	LD	B,0
L__6:
	LD	A,B
	SEXT	HL
	LD	L,B
	LD	(IX+-4),HL
	OR	A,A
	LD	BC,0
	SBC	HL,BC
	JR	Z,L_10
	LD	BC,63
	LD	HL,(IX+-4)
	OR	A,A
	SBC	HL,BC
	JR	Z,L_10
	LD	A,(IX+-1)
	CP	A,8
	JR	C,L_8
L_10:
;   35	    
;   36	    // Create or empty the output program
;   37	    ice.outPrgm = ti_OpenVar(ice.outName, "w", ti_Program);
	LD	BC,5
	PUSH	BC
	LD	BC,L__10
	PUSH	BC
	LD	BC,_ice
	PUSH	BC
	CALL	_ti_OpenVar
	POP	BC
	POP	BC
	POP	BC
	LD	(_ice+19),A
;   38	    if (!ice.outPrgm)                                      goto err;
	OR	A,A
	JR	Z,L_0
;   39	    
;   40	    // Do the stuff
;   41	    parseProgram();
	CALL	_parseProgram
L_0:
;   42	    
;   43	err:
;   44	    ti_CloseAll();
	CALL	_ti_CloseAll
;   45	    prgm_CleanUp();
	CALL	_prgm_CleanUp
;   46	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_prgm_CleanUp                       IMPORT  -----   function
;_parseProgram                       IMPORT  -----   function
;_ti_GetC                            IMPORT  -----   function
;_ti_OpenVar                         IMPORT  -----   function
;_ti_CloseAll                        IMPORT  -----   function
;_ice                                STATIC     20   variable
;_strcpy                             IMPORT  -----   function
;token                                 IX-4      3   variable
;a                                     IX-1      1   variable


; Stack Frame Size: 10 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__0:
	DB	"ABC"
	DB	0
L__1:
	DB	"r"
	DB	0
L__10:
	DB	"w"
	DB	0
	XREF _parseProgram:ROM
	XREF _ti_GetC:ROM
	XREF _ti_OpenVar:ROM
	XREF _ti_CloseAll:ROM
	XREF _strcpy:ROM
	XREF _prgm_CleanUp:ROM
	XREF __frameset:ROM
	XDEF _main
	XDEF _ice
	END
